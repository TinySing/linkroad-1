<template>
  <!--主体背景部分-->
  <div class="system_main">
    <i>当前位置：系统管理</i>
    <!--上半部分-->
    <div class="top_area">
      <!--搜索框-->
      <el-input @input="change($event)" v-model="searchData" class="search" type="text"
                placeholder="项目名称/项目编号/负责人姓名"></el-input>
      <div class="but">
        <button @click="searchBut">查询</button>
        <button @click="reset" style="margin-left: 15px!important;">重置</button>
      </div>
      <!--选择器插件-->
      <el-select @change="changeCode(value)" v-model="value" filterable :placeholder="value" size="small"
                 style="float: right;width:105px;margin-top: 2.5vh;margin-right:28px;">
        <el-option
          v-for="item in options"
          :key="item.value"
          :label="item.label"
          :value="item.value">
        </el-option>
      </el-select>
    </div>
    <!--下半部分-->
    <div class="bottom_area" style="padding:3vh 15px 0">
      <!--表格插件-->
      <!--<div class="main-content">-->
      <!--tableData.slice((currentPage-1)*pageSize,currentPage*pageSize)-->
      <el-table :header-cell-style="{background:'#f0f5f9',color:'#666',borderRight:'none'}"
                :data="tableData.slice((currentPage-1)*pageSize,currentPage*pageSize)"
                border
                height="80%"
                style="width:100%;display:block;max-height:51vh;overflow:auto;font-size:12px;"
      >
        <el-table-column
          prop="describe"
          label="系统描述"
          align="center">
          <template slot-scope="scope">
            <p style="text-align: left">系统名称：{{scope.row.systemName}}</p>
            <!--<p>系统编号：{{scope.row.systemCode}}</p>-->
            <p style="text-align: left">系统归属：{{scope.row.ownerShip}}</p>
            <p style="text-align: left">负责处室：{{scope.row.describe}}</p>
          </template>
        </el-table-column>
        <el-table-column
          prop="projectOwner"
          label="系统负责人"
          align="center"
        >
        </el-table-column>
        <el-table-column
          prop="projectMembers"
          label="系统参与人"
          align="center"
        >
        </el-table-column>
        <el-table-column
          prop="man"
          label="关联设备情况"
          align="center"
        >
          <template slot-scope="scope">
            <!--点击查看出弹窗-->
            <div @click="centerDialog=true">
              <el-button @click="check(scope.$index,tableData)" type="text" size="small">
                查看
              </el-button>
            </div>
            <!--弹窗部分-->
            <el-dialog
              title="系统相关设备"
              :close-on-click-modal="false"
              :visible.sync="centerDialog"
              center>
              <div class="diaBox"
                   style="margin:15px 2vh 0 2vh;padding-bottom: 15px;">
                <!--表格部分-->
                <el-table
                  :header-cell-style="{background:'#f0f5f9',color:'#666',height:'28px'}"
                  :data="tableDataOne.slice((currentPageOne-1)*pageSizeOne,currentPageOne*pageSizeOne)"
                  border>
                  <el-table-column
                    prop="number"
                    label="序号"
                  >
                  </el-table-column>
                  <el-table-column
                    prop="type"
                    label="设备类型"
                  >
                  </el-table-column>
                  <el-table-column
                    prop="ip"
                    label="设备IP"
                  >
                  </el-table-column>
                  <el-table-column
                    prop="network"
                    label="所处网段"
                  >
                  </el-table-column>
                  <el-table-column
                    prop="environment"
                    label="所处环境"
                  >
                  </el-table-column>
                </el-table>
              </div>
              <!--style="display:inline-block;width:300px;height:30px;margin-top: 23px;"-->
              <span slot="footer" class="dialog-footer">
                 <div class="block" style="margin-left: auto;">
                    <el-pagination
                      @current-change="handleCurrentChangeOne"
                      :current-page="currentPageOne"
                      :page-size="pageSizeOne"
                      layout="total, prev, pager, next"
                      :total="totalOne">
                  </el-pagination>
                 </div>
          </span>
            </el-dialog>
          </template>
        </el-table-column>
        <el-table-column
          prop="validity"
          label="系统有效性"
          align="center"
        >
        </el-table-column>
        <el-table-column
          prop="address"
          label="操作"
          align="center"
        >
          <template slot-scope="scope">
            <!--点击操作出弹窗-->
            <el-button @click="centerDialogOne = true" type="text" size="small" style="text-decoration: underline">
              操作
            </el-button>
            <!--弹窗部分-->
            <el-dialog
              title="系统相关人员"
              :visible.sync="centerDialogOne"
              width="633"
              center>
              <div class="diaBox"
                   style="margin-top: 10px;margin-left:2.7vh">
                <el-transfer
                  v-model="valueAdd"
                  filterable
                  :titles="['全部项目', '待添加项目']"
                  @right-check-change=''
                  :button-texts="[]"
                  :format="{
                     noChecked: '${total}',
                     hasChecked: '${checked}/${total}'
                      }"
                  :data="dataJoin">
                  <!--<el-button class="transfer-footer" slot="left-footer" size="small">操作</el-button>-->
                  <!--<el-button class="transfer-footer" slot="right-footer" size="small" @click="joinAdd">直接添加，无需再次勾选</el-button>-->
                </el-transfer>
              </div>
              <span slot="footer" class="dialog-footer"
                    style="display:inline-block;width:300px;height:30px;margin-top: 15px;">
          <el-button class="btn0" size="small" @click="centerDialogOne = false">取消</el-button>
          <el-button class="btn1" type="primary" size="small" @click="centerDialogOne = false">确定</el-button>

          </span>
            </el-dialog>
          </template>
        </el-table-column>
      </el-table>
      <!--分页插件-->
      <!--width:600px;height: 6vh;position: absolute;bottom: 4vh;left:40vw;-->
      <div class="block" style="width:600px;height: 6vh;margin-top: 3vh;left:40vw;">
        <el-pagination
          background
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
          :current-page="currentPage"
          :page-sizes="[5,10,20,30]"
          :page-size="pageSize"
          layout="total,sizes,prev, pager, next, jumper"
          :total="total">
        </el-pagination>
      </div>
    </div>
    <!--</div>-->
  </div>

</template>

<script>
  export default {
    name: "SystemMan",
    data() {
      const generateData = _ => {
        let dataJoin = [];
        // const havaSystem = [];
        // let qs = require('qs');
        // , qs.stringify(information)
        // let information = {"userId": ""};
        // this.$axios.post('/monitorCon/system/user/query').then((response) => {
        //   // this.havaSystem = [];
        //   for (let i = 0; i < response.data.length; i++) {
        //     dataJoin.push({
        //       key: i,
        //       label: response.data[i]['userName']
        //     });
        //   }
        // });
        return dataJoin;
      };
      return {
        dataJoin: generateData(),
        valueAdd: [],
        joinAddValue: [],
        total: null,
        currentPage: 1,
        pageSize: 5,
        totalOne: null,
        currentPageOne: 1,
        pageSizeOne: 6,
        centerDialog: false,
        centerDialogOne: false,
        value: '全部',
        searchData: '',
        important: '',
        options: [
          {
            value: '选项1',
            label: '全部'
          },
          {
            value: 'JT',
            label: '集团'
          },
          {
            value: 'SX',
            label: '产险'
          },
          {
            value: 'CX',
            label: '寿险'
          }
        ],
        tableData: [],
        tableDataOne: [],
        // tableData: [
        //   {
        //     systemName: 'EHR',
        //     describe: '开发4部',
        //     ownership: '寿险',
        //     name: '周周周，吴小莉',
        //     join: '赵朝朝，王望望，李丽丽，赵朝朝，王望望，李丽丽，赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: '产险信保',
        //     describe: '开发8室-应用产品线',
        //     ownership: '集团',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: '运营管理系统',
        //     describe: '应用规划室',
        //     ownership: '产险',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: 'EHR',
        //     describe: '负责处事：开发4部',
        //     ownership: '寿险',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: '人力资源管理系统',
        //     describe: '开发8室-应用产品线',
        //     ownership: '集团',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: 'EHR',
        //     describe: '开发4部',
        //     ownership: '寿险',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: '开门红大屏二期',
        //     describe: '开发8室-应用产品线',
        //     ownership: '集团',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: '全链路管理系统',
        //     describe: '开发4部',
        //     ownership: '产险',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: 'EHR',
        //     describe: '开发4部',
        //     ownership: '寿险',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: 'EHR',
        //     describe: '开发4部',
        //     ownership: '产险',
        //     name: '周周周',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   },
        //   {
        //     systemName: 'EHR',
        //     describe: '开发6部',
        //     ownership: '集团',
        //     name: '王大大，辛芳华',
        //     join: '赵朝朝，王望望，李丽丽',
        //     validity: '正常'
        //   }
        // ],

        // tableDataOne: [
        //   {
        //     number: '1',
        //     type: '虚拟机',
        //     ip: '10.9.0.4.95',
        //     network: 'APP安全区',
        //     environment: '测试'
        //   },
        //   {
        //     number: '1',
        //     type: '虚拟机',
        //     ip: '10.9.0.4.95',
        //     network: 'APP安全区',
        //     environment: '测试'
        //   },
        //   {
        //     number: '1',
        //     type: '虚拟机',
        //     ip: '10.9.0.4.95',
        //     network: 'APP安全区',
        //     environment: '测试'
        //   },
        //   {
        //     number: '1',
        //     type: '虚拟机',
        //     ip: '10.9.0.4.95',
        //     network: 'APP安全区',
        //     environment: '测试'
        //   },
        //   {
        //     number: '1',
        //     type: '虚拟机',
        //     ip: '10.9.0.4.95',
        //     network: 'APP安全区',
        //     environment: '测试'
        //   },
        //   {
        //     number: '1',
        //     type: '虚拟机',
        //     ip: '10.9.0.4.95',
        //     network: 'APP安全区',
        //     environment: '测试'
        //   }
        // ]
      }
    },
    created() {
      // this.total = this.tableData.length
    },
    methods: {
      //点击系统弹出对应的关联设备
      check(index, tableData) {
        this.important = index
        this.projectId = tableData[index].projectId;
        // console.log(tableData[index])
        let qs = require('qs');
        let information = {"projectId": this.projectId};
        this.$axios.post('/monitorCon/system/appInfo/querySysByProject', qs.stringify(information)).then((response) => {
          this.tableDataOne = []
          for (let i = 0; i < response.data.length; i++) {
            this.tableDataOne.push({
              'number': i + 1,
              'type': response.data[i]['htype'],
              'ip': response.data[i]['ip'],
              'network': response.data[i]['networkregion'],
              'environment': response.data[i]['env'],
            });
          }
          // console.log(this.tableDataOne)
          this.totalOne = this.tableDataOne.length
        });
      },
      //重置按钮的方法
      reset() {
        this.value = '全部'
        //重置后输入框清空
        this.searchData = ""
        let qs = require('qs');
        let information = {"userId": sessionStorage.getItem("userId")};
        this.$axios.post('/monitorCon/system/project/queryCascadeProject', qs.stringify(information)).then((response) => {
          this.tableData = []
          for (let i = 0; i < response.data.length; i++) {
            if (response.data[i]['enable'] === '1') {
              response.data[i]['enable'] = '正常'
            } else {
              response.data[i]['enable'] = '停用'
            }
            let projectname = response.data[i]['projectname']
            let projectMembers = response.data[i]['projectMembers']
            let projectId = response.data[i]['projectid']
            let projectOwner = response.data[i]['projectOwners']
            let validity = response.data[i]['enable']
            let a = response.data[i]['projectOwners']
            for (let i = 0; i < a.length; i++) {
              if (a[i].companyCode === 'JT') {
                a[i].companyCode = '集团'
              }
              if (a[i].companyCode === 'SX') {
                a[i].companyCode = '产险'
              }
              if (a[i].companyCode === 'CX') {
                a[i].companyCodee = '寿险'
              }
              this.tableData.push({
                'systemName': projectname,
                'projectMembers': projectMembers,
                'projectId': projectId,
                'projectOwner': projectOwner[i].userName,
                'ownerShip': a[i].companyCode,
                'describe': projectOwner[i].dept,
                'validity': validity,
              });
            }
            this.total = this.tableData.length
            // console.log(response.data[i]['projectOwners'][0].companyCode)
          }
        });
        // let qs = require('qs');
        // let information = {"userId": sessionStorage.getItem("userId"), "part": "1"};
        // this.$axios.post('/monitorCon/system/project/queryByUser', qs.stringify(information)).then((response) => {
        //   this.tableData = []
        //   for (let i = 0; i < response.data.length; i++) {
        //     this.tableData.push({
        //       'systemCode': response.data[i]['projectid'],
        //       'systemName': response.data[i]['projectname']
        //     });
        //   }
        //   this.total = this.tableData.length
        // });
      },
      //es6过滤得到满足搜索条件的展示数据
      searchList() {
        let tableDataSea = this.data.filter((item) =>
          item.systemName.includes(this.searchData) || item.projectId.includes(this.searchData) || item.projectOwner.includes(this.searchData)
        )
        this.tableData = tableDataSea.filter((item, index) =>
          index < this.currentPage * this.pageSize && index >= this.pageSize * (this.currentPage - 1)
        )
        this.total = this.tableData.length
      },
      //查询按钮的方法
      searchBut() {
        this.currentPage = 1
        this.$axios.post('/monitorCon/system/project/queryCascadeProject').then((response) => {
          this.total = this.tableData.length
          this.data = this.tableData
          this.searchList()
        });
        if (this.searchData === "") {
          alert('系统不能为空，请重新输入')
        }
      },
      // changeCode(value) {
      //   let qs = require('qs');
      //   let information = {"companyCode": this.value};
      //   this.$axios.post('/monitorCon/system/project/queryCascadeProject', qs.stringify(information)).then((response) => {
      //     this.tableData = []
      //     for (let i = 0; i < response.data.length; i++) {
      //       if (response.data[i]['enable'] === '1') {
      //         response.data[i]['enable'] = '正常'
      //       } else {
      //         response.data[i]['enable'] = '停用'
      //       }
      //       let projectname = response.data[i]['projectname']
      //       let projectMembers = response.data[i]['projectMembers']
      //       let projectId = response.data[i]['projectid']
      //       let projectOwner = response.data[i]['projectOwners']
      //       let validity = response.data[i]['enable']
      //       let a = response.data[i]['projectOwners']
      //       for (let i = 0; i < a.length; i++) {
      //         // if (a[i].companyCode === 'JT') {
      //         //   a[i].companyCode = '集团'
      //         // }
      //         // if (a[i].companyCode === 'SX') {
      //         //   a[i].companyCode = '产险'
      //         // }
      //         // if (a[i].companyCode === 'CX') {
      //         //   a[i].companyCodee = '寿险'
      //         // }
      //         this.tableData.push({
      //           'systemName': projectname,
      //           'projectMembers': projectMembers,
      //           'projectId': projectId,
      //           'projectOwner': projectOwner[i].userName,
      //           'ownerShip': a[i].companyCode,
      //           'describe': projectOwner[i].dept,
      //           'validity': validity,
      //         });
      //       }
      //       this.total = this.tableData.length
      //     }
      //   });
      // },
      getSystem() {
        let qs = require('qs');
        let information = {
          "userId": sessionStorage.getItem("userId"),
          // "pageNum": this.currentPage,
          // "pageSize": this.pageSize
        };
        this.$axios.post('/monitorCon/system/project/queryCascadeProject', qs.stringify(information)).then((response) => {
          console.log(response)
          for (let i = 0; i < response.data.length; i++) {
            if (response.data[i]['enable'] === '1') {
              response.data[i]['enable'] = '正常'
            } else {
              response.data[i]['enable'] = '停用'
            }
            let projectname = response.data[i]['projectname']
            let projectMembers = response.data[i]['projectMembers']
            let projectId = response.data[i]['projectid']
            let projectOwner = response.data[i]['projectOwners']
            let validity = response.data[i]['enable']
            let a = response.data[i]['projectOwners']
            for (let i = 0; i < a.length; i++) {
              if (a[i].companyCode === 'JT') {
                a[i].companyCode = '集团'
              }
              if (a[i].companyCode === 'SX') {
                a[i].companyCode = '产险'
              }
              if (a[i].companyCode === 'CX') {
                a[i].companyCodee = '寿险'
              }
              if (projectMembers.length > 1) {
                projectMembers = projectMembers.join(',')
              }
              if (projectOwner.length > 1) {
                console.log(projectOwner[i].userName)
                // this.tableData.push({
                //   'projectOwner': projectOwner[i].userName,
                // });
              }
              this.tableData.push({
                'systemName': projectname,
                'projectMembers': projectMembers,
                'projectId': projectId,
                'projectOwner': projectOwner[i].userName,
                'ownerShip': a[i].companyCode,
                'describe': projectOwner[i].dept,
                'validity': validity,
              });
            }
            this.total = this.tableData.length
          }
        });
      },
      join() {
        let qs = require('qs');
        let information = {"userId": this.userId, "part": "2"};
        this.$axios.post('/monitorCon/system/project/queryByUser', qs.stringify(information)).then((response) => {
          this.sysListOne = []
          for (let i = 0; i < response.data.length; i++) {
            // console.log(this.sysListOne)
            this.sysListOne.push({
              'sysIndex': i + 1,
              'sysCode': response.data[i]['projectid'],
              'sysName': response.data[i]['projectname']
            });
          }
          this.totalOne = this.sysListOne.length
        });
      },
      joinAdd() {
        this.centerDialogOne = false
        this.joinAddValue = []
        for (let i = 0; i < this.valueAdd.length; i++) {
          this.joinAddValue.push({
            'sysCode': this.dataJoin[this.valueAdd[i]].label.split(" ")[0],
            'sysName': this.dataJoin[this.valueAdd[i]].label.split(" ")[1]
          })
          // console.log(this.joinAddValue[i].sysName)
          // let qs = require('qs');
          // let information = {"part": "1","projectid": this.joinAddValue[i].sysCode, "projectname": this.joinAddValue[i].sysName};
          // this.$axios.post('/monitorCon/system/project/queryByUser', qs.stringify(information)).then((response) => {
          //   console.log(response)
          // });
        }
      },
      change(e) {
        this.$forceUpdate()
      },
      handleSizeChange(val) {
        this.pageSize = val;
      },
      handleCurrentChange(val) {
        this.currentPage = val;
      },
      handleCurrentChangeOne(val) {
        this.currentPageOne = val;

        console.log(this.currentPageOne)
      },
    },
    computed: {
      // 模糊搜索
      // tables() {
      //   const search = this.search
      //   if (search) {
      //     return this.tableData.filter(data => {
      //       return Object.keys(data).some(key => {
      //         return String(data[key]).toLowerCase().indexOf(search) > -1
      //       })
      //     })
      //   }
      //   // return this.tableData
      //   return this.tableData.slice((this.currentPage - 1) * this.pageSize,
      //     this.currentPage * this.pageSize)
      // }
    },
    mounted() {
      this.getSystem()
    },
    watch: {
      //监听查看相关设备的弹窗的centerDialog值，解决关闭弹窗分页状态保持问题
      centerDialog: {
        handler(newName, oldName) {
          this.currentPageOne = 1;
        },
      }
    }
  }
</script>


<style scoped>
  /*去掉el-table的多余横线*/
  .el-table::before {
    z-index: inherit;
    height: 0px !important;
  }

  /*弹窗弹出的表格样式*/
  .bottom_area >>> .cell {
    line-height: 16px !important;
  }

  /*弹窗样式*/
  .diaBox p {
    float: left;
    margin-top: 23px;
  }

  .diaBox .eqiIp {
    margin-left: 15px;
  }

  /*.diaBox input {*/
  /*width: 384px;*/
  /*height: 23px;*/
  /*float: left;*/
  /*margin-top: 16px;*/
  /*margin-left: 10px;*/
  /*border: 1px solid #e8e8e8;*/
  /*}*/

  .diaBox .el-table >>> .cell {
    text-align: center;
  }

  .bottom_area >>> .el-dialog__header {
    height: 36px;
    background-color: #66bded;
    padding: 7px 20px 0px !important;
  }

  .bottom_area >>> .el-dialog--center {
    /*width: 633px;*/
  }

  .bottom_area >>> .el-dialog__body {
    padding: 0 !important;
  }

  .bottom_area >>> .el-dialog__title {
    color: #fff;
    font-size: 14px;
  }

  .bottom_area >>> .el-dialog__headerbtn {
    top: 12px;
  }

  .bottom_area >>> .el-dialog__headerbtn .el-dialog__close {
    color: #fff;
  }

  .bottom_area >>> .el-button--small, .el-button--small.is-round {
    /*width: 80px;*/
    padding: 5px 15px !important;
  }

  /*主体背景部分*/
  .system_main {
    height: 87vh;
    min-width: 1159px;
    background-color: #f6f7ff
  }

  .system_main i {
    display: inline-block;
    color: #444;
    font-size: 12px;
    margin-top: 17px;
    margin-left: 18px;
  }

  /*上半部分*/
  .top_area {
    height: 9vh;
    margin: 11px 18px 0;
    background-color: #fff;
    box-shadow: 0 0 8px 3px rgba(0, 0, 0, 0.1);
  }

  /*搜索框*/
  .top_area .search {
    float: left;
    width: 270px;
    height: 20px;
    margin-left: 24px;
    margin-top: 2.5vh;
  }

  .top_area >>> .el-input__inner {
    height: 28px;
  }

  .top_area >>> .el-select .el-input .el-select__caret {
    line-height: 12px;
  }

  .top_area .but {
    float: left;
    display: inline-block;
    margin-top: 2.5vh;
  }

  .top_area .but button {
    width: 72px;
    height: 27px;
    margin-left: 20px;
    border: none;
    background-color: #43abe9;
    border-radius: 5px;
    color: #fff;
    box-shadow: 0 2px 5px 2px rgba(0, 0, 0, 0.1);
    cursor: pointer;
  }

  /*下半部分*/
  .bottom_area {
    height: 63vh;
    margin: 17px 18px 0;
    background-color: #fff;
    box-shadow: 0 0 8px 3px rgba(0, 0, 0, 0.1);
  }

  .bottom_area .btn0, .bottom_area .btn1 {
    display: inline-block;
    color: #66bded;
    cursor: pointer;
    background-color: #fff;
    border: 1px solid #a3d7f4;
    box-shadow: 0 2px 5px 2px rgba(145, 208, 243, 0.3);
    width: 95px;
    height: 28px;
    font-weight: bold;
  }

  .bottom_area >>> .btn1 {
    margin-left: 52px;
    color: #fff !important;
    background-color: #66bded;
  }

  /*主体表格样式*/
  .bottom_area >>> .el-table tr {
    height: 29px !important;
  }

  .bottom_area >>> .tableHead {
    font-size: 14px;
    font-family: '黑体';
  }

  .bottom_area >>> .el-table td, .el-table th {
    padding: 1px 0 !important;
  }

  /*穿梭框的宽度*/
  .bottom_area >>> .el-transfer-panel {
    width: 41.5vh;
  }

  .bottom_area >>> .el-transfer__buttons {
    padding: 0 3vh !important;
  }

  .bottom_area >>> .el-dialog {
    width: 100vh !important;
  }

  .bottom_area >>> .el-dialog__footer {
    padding-top: 0;
  }

  .bottom_area >>> .el-table__header {
    background-color: #f0f5f9;
  }
</style>

